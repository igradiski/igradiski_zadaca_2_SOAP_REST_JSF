/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.foi.nwtis.igradiski.rest.serveri;

import java.util.ArrayList;
import java.util.List;
import javax.ws.rs.core.Context;
import javax.ws.rs.core.UriInfo;
import javax.ws.rs.Produces;
import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.HeaderParam;
import javax.ws.rs.Path;
import javax.ws.rs.PUT;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.Response;
import org.foi.nwtis.igradiski.ws.klijenti.Zadaca2_1WS;
import org.foi.nwtis.igradiski.ws.serveri.Aerodrom;
import org.foi.nwtis.podaci.Odgovor;

/**
 * REST Web Service
 *
 * @author Korisnik
 */
@Path("aerodromi")
public class Zadaca2RestAerodromi {

    @Context
    private UriInfo context;

    /**
     * Creates a new instance of Zadaca2RestAerodromi
     */
    public Zadaca2RestAerodromi() {
    }

    /**
     *
     * Vraća aerodrome koje prati korisnik
     * 
     * @param korisnik
     * @param lozinka
     * @return
     */
    @GET
    @Consumes({MediaType.APPLICATION_JSON})
    @Produces({MediaType.APPLICATION_JSON})
    public Response dajAerodomeKorisnika(
            @HeaderParam("korisnik") String korisnik,
            @HeaderParam("lozinka") String lozinka) {
        Zadaca2_1WS zadaca2_1WS = new Zadaca2_1WS();
        List<Aerodrom> aerodromi= zadaca2_1WS.dajAerodromeKorisnika(korisnik, lozinka);
        if(aerodromi == null){
            aerodromi = new ArrayList<>();
        }
        Odgovor odgovor = new Odgovor();
        odgovor.setStatus("10");
        odgovor.setPoruka("OK");
        odgovor.setOdgovor(aerodromi.toArray());
        return Response
                .ok(odgovor)
                .status(200)
                .build();
    }
    
    /**
     * Retrieves representation of an instance of org.foi.nwtis.igradiski.rest.serveri.Zadaca2RestAerodromi
     * @return an instance of Response
     */
    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public Response getJson() {
       return Response.ok("Hello NWTiS").status(Response.Status.OK).build();
    }

    /**
     *
     * Vraća aerodrome prema nazivu ili drzavi
     * 
     * @param korisnik
     * @param lozinka
     * @return
     */
    @Path("/svi")
    @GET
    @Consumes({MediaType.APPLICATION_JSON})
    @Produces({MediaType.APPLICATION_JSON})
    public Response dajAerodome(
            @HeaderParam("korisnik") String korisnik,
            @HeaderParam("lozinka") String lozinka,
            @QueryParam("naziv") String naziv,
            @QueryParam("drzava") String drzava) {
        List<Aerodrom> aerodromi=new ArrayList<>() ;
        Zadaca2_1WS zadaca2_1WS = new Zadaca2_1WS();
        if(! naziv.isEmpty() && naziv!=null){
            aerodromi= zadaca2_1WS.dajAerodromeNaziv(korisnik, lozinka,naziv);
        }else if(!drzava.isEmpty() && drzava !=null){
            //TODO  treba biti za drzavu
            aerodromi= zadaca2_1WS.dajAerodromeNaziv(korisnik, lozinka,drzava);
        }
        else{
            aerodromi= zadaca2_1WS.dajAerodromeNaziv(korisnik, lozinka,"%");
        }
        if(aerodromi == null){
            aerodromi = new ArrayList<>();
        }
        Odgovor odgovor = new Odgovor();
        odgovor.setStatus("10");
        odgovor.setPoruka("OK");
        
        odgovor.setOdgovor(aerodromi.toArray());
        
        return Response
                .ok(odgovor)
                .status(200)
                .build();
    }
    
    
    
    
    
    
    
}
